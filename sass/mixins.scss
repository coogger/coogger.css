@mixin active-basic($name, $property, $value){
  [active~="#{$name}"]{
    &:active{
      #{$property}:$value;
    }
  }
}
@mixin active-prefixed($name, $property, $value){
  [active~="#{$name}"]{
    &:active{
      @include prefixed($property, $value);
    }
  }
}
@mixin active-animation($name){
  [animation-active~="#{$name}"]{
    &:active{
      @include prefixed(animation-name, $name);
    }
  }
}
@mixin focus-basic($name, $property, $value){
  [focus~="#{$name}"]{
    &:focus{
      #{$property}:$value;
    }
  }
}
@mixin focus-prefixed($name, $property, $value){
  [focus~="#{$name}"]{
    &:focus{
      @include prefixed($property, $value);
    }
  }
}
@mixin focus-animation($name){
  [animation-focus~="#{$name}"]{
    &:focus{
      @include prefixed(animation-name, $name);
    }
  }
}
@mixin general($name, $property, $value){
  // devices
  [general~="#{$name}"]{#{$property}:$value}
  @include hover-prefixed($name, $property, $value);
  @include focus-prefixed($name, $property, $value);
  @include active-prefixed($name, $property, $value);
  @include animation-prefixed($name, $property, $value);
  @include device("mobiles", $name, 320px, $property, $value);
  @include device("mobilem", $name, 375px, $property, $value);
  @include device("mobilel", $name, 425px, $property, $value);
  @include device("tablet", $name, 768px, $property, $value);
  @include device("laptop", $name, 1024px, $property, $value);
  @include device("laptopl", $name, 1440px, $property, $value);
  @include device("4k", $name, 2560px, $property, $value);
}
@mixin general-prefixed($name, $property, $value){
  // devices
  [general~="#{$name}"]{
    @include prefixed($property, $value);
  }
  @include hover-prefixed($name, $property, $value);
  @include focus-prefixed($name, $property, $value);
  @include active-prefixed($name, $property, $value);
  @include animation-prefixed($name, $property, $value);
  @include device("mobiles", $name, 320px, $property, $value);
  @include device("mobilem", $name, 375px, $property, $value);
  @include device("mobilel", $name, 425px, $property, $value);
  @include device("tablet", $name, 768px, $property, $value);
  @include device("laptop", $name, 1024px, $property, $value);
  @include device("laptopl", $name, 1440px, $property, $value);
  @include device("4k", $name, 2560px, $property, $value);
}
@mixin hover-basic($name, $property, $value){
  [hover~="#{$name}"]{
    &:hover{
      #{$property}:$value;
    }
  }
}
@mixin hover-prefixed($name, $property, $value){
  [hover~="#{$name}"]{
    &:hover{
      @include prefixed($property, $value);
    }
  }
}
@mixin hover-animation($name){
  [animation-hover~="#{$name}"]{
    &:hover{
      @include prefixed(animation-name, $name);
    }
  }
}
@mixin animation($name){
  [animation~="#{$name}"]{
    @include prefixed(animation-name, $name);
  }
  @include hover-animation($name);
  @include focus-animation($name);
  @include active-animation($name);
}
@mixin animation-basic($name, $property, $value){
  @include hover-animation($name);
  @include focus-animation($name);
  @include active-animation($name);
  @keyframes #{$name}{
    100%{
      #{$property}:$value;
    }
  }
  @-webkit-keyframes #{$name}{
    100%{
      @include prefixed($property, $value);
    }
  }
}
@mixin animation-prefixed($name, $property, $value){
  @include hover-animation($name);
  @include focus-animation($name);
  @include active-animation($name);
  @keyframes #{$name}{
    100%{
      @include prefixed($property, $value);
    }
  }
  @-webkit-keyframes #{$name}{
    100%{
      @include prefixed($property, $value);
    }
  }
}
@mixin flex($name, $property, $value){
  @include prefixed($property, $value);
  [flex-hover~="#{$name}"]{
    &:hover{
      @include prefixed($property, $value);
    }
  }
  [flex-focus~="#{$name}"]{
    &:focus{
      @include prefixed($property, $value);
    }
  }
  [flex-active~="#{$name}"]{
    &:active{
      @include prefixed($property, $value);
    }
  }
  // devices
  @include device("mobiles", $name, 320px, $property, $value);
  @include device("mobilem", $name, 375px, $property, $value);
  @include device("mobilel", $name, 425px, $property, $value);
  @include device("tablet", $name, 768px, $property, $value);
  @include device("laptop", $name, 1024px, $property, $value);
  @include device("laptopl", $name, 1440px, $property, $value);
  @include device("4k", $name, 2560px, $property, $value);

}
@mixin display-flex(){
  @include prefixed(display, flex);
}
@mixin device($name, $key, $maxwidth, $property, $value){
  @media screen and (max-width: $maxwidth) {
    [device-#{$name}~="#{$key}"]{
      #{$property}: $value;
    }
  }
}
@mixin device-prefixed($name, $key, $maxwidth, $property, $value){
  @media screen and (max-width: $maxwidth) {
    [device-#{$name}~="#{$key}"]{
      @include prefixed($property, $value);
    }
  }
}
@mixin prefixed($property, $value) {
    -webkit-#{$property}: $value;
    -moz-#{$property}: $value;
    -ms-#{$property}: $value;
    -o-#{$property}: $value;
    #{$property}: $value;
}
@mixin reverse-prefixed($property, $value) {
    #{$property}: -webkit-#{$value};
    #{$property}: -moz-#{$value};
    #{$property}: -ms-#{$value};
    #{$property}: -o-#{$value};
    #{$property}: #{$value};
}
@mixin text-shadow($string: 0 1px 3px rgba(0, 0, 0, 0.25)) {
	text-shadow: $string;
}
@mixin box-shadow($string) {
  @include prefixed(box-shadow, $string);
}
@mixin drop-shadow($x: 0, $y: 1px, $blur: 2px, $spread: 0, $alpha: 0.25) {
  @include prefixed(box-shadow, $x $y $blur $spread rgba(0, 0, 0, $alpha));
}
@mixin inner-shadow($x: 0, $y: 1px, $blur: 2px, $spread: 0, $alpha: 0.25) {
  @include prefixed(box-shadow, inset $x $y $blur $spread rgba(0, 0, 0, $alpha));
}
@mixin box-sizing($type: border-box) {
  @include prefixed(box-sizing, $type);
}
@mixin border($br){
  @include prefixed(border, $br);
}
@mixin border-radius($radius: 4px) {
  @include prefixed(border-radius, $radius);
	-moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}
@mixin border-color($br-color) {
  @include prefixed(border-color, $br-color);
}
@mixin border-radiuses($topright: 0, $bottomright: 0, $bottomleft: 0, $topleft: 0) {
	-webkit-border-top-right-radius:    $topright;
	-webkit-border-bottom-right-radius: $bottomright;
	-webkit-border-bottom-left-radius:  $bottomleft;
	-webkit-border-top-left-radius:     $topleft;
	-moz-border-radius-topright:        $topright;
	-moz-border-radius-bottomright:     $bottomright;
	-moz-border-radius-bottomleft:      $bottomleft;
	-moz-border-radius-topleft:         $topleft;
	border-top-right-radius:            $topright;
	border-bottom-right-radius:         $bottomright;
	border-bottom-left-radius:          $bottomleft;
	border-top-left-radius:             $topleft;
	-moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}
@mixin opacity($opacity: 0.5) {
  @include prefixed(opacity, $opacity);
}
@mixin gradient($startColor: #eee, $endColor: white) {
	background-color: $startColor;
	background: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
	background: -webkit-linear-gradient(top, $startColor, $endColor);
	background: -moz-linear-gradient(top, $startColor, $endColor);
	background: -ms-linear-gradient(top, $startColor, $endColor);
	background: -o-linear-gradient(top, $startColor, $endColor);
}
@mixin horizontal-gradient($startColor: #eee, $endColor: white) {
 	background-color: $startColor;
	background-image: -webkit-gradient(linear, left top, right top, from($startColor), to($endColor));
	background-image: -webkit-linear-gradient(left, $startColor, $endColor);
	background-image: -moz-linear-gradient(left, $startColor, $endColor);
	background-image: -ms-linear-gradient(left, $startColor, $endColor);
	background-image: -o-linear-gradient(left, $startColor, $endColor);
}
@mixin transition($transition) {
  @include prefixed(transition, $transition);
}
@mixin transform($string){
  @include prefixed(transform, $string);
}
@mixin perspective($value: 1000) {
  @include prefixed(perspective, $value);
}
@mixin transform-origin($x:center, $y:center) {
  @include prefixed(transform-origin, $x $y);
}
