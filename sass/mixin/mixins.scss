@mixin general_device($key, $property, $value, $prefixed, $device_name) {
  @if $prefixed == "true"{
    [#{$device_name}~="#{$key}"], 
    [#{$device_name}~="#{$key}:hover"]:hover, 
    [#{$device_name}~="#{$key}:focus"]:focus, 
    [#{$device_name}~="#{$key}:active"]:active{
      @include prefixed($property, $value);
    }
  }
  @else{
    [#{$device_name}~="#{$key}"], 
    [#{$device_name}~="#{$key}:hover"]:hover, 
    [#{$device_name}~="#{$key}:focus"]:focus, 
    [#{$device_name}~="#{$key}:active"]:active{
      #{$property}:$value;
    }
  }
}
@mixin device($key, $property, $value, $prefixed, $device_name){
  @if ($device_name == "general"){
    @include general_device($key, $property, $value, $prefixed, $device_name)
  }
  @else{
    $device: map-get($devices, $device_name);
    $max: map-get($device, "max");
    $min: map-get($device, "min");
    @media screen and (min-width: $min) and (max-width: $max) {
      @include general_device($key, $property, $value, $prefixed, $device_name)
    }
  }
}
@mixin prefixed($property, $value) {
    -webkit-#{$property}: $value;
    -moz-#{$property}: $value;
    -ms-#{$property}: $value;
    -o-#{$property}: $value;
    #{$property}: $value;
}
@mixin reverse-prefixed($property, $value) {
    #{$property}: -webkit-#{$value};
    #{$property}: -moz-#{$value};
    #{$property}: -ms-#{$value};
    #{$property}: -o-#{$value};
    #{$property}: #{$value};
}
@mixin border($br){
  @include prefixed(border, $br);
}
@mixin border-radius($radius: 4px) {
  @include prefixed(border-radius, $radius);
	-moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}
@mixin border-color($br-color) {
  @include prefixed(border-color, $br-color);
}
@mixin border-radiuses($topright: 0, $bottomright: 0, $bottomleft: 0, $topleft: 0) {
	-webkit-border-top-right-radius:    $topright;
	-webkit-border-bottom-right-radius: $bottomright;
	-webkit-border-bottom-left-radius:  $bottomleft;
	-webkit-border-top-left-radius:     $topleft;
	-moz-border-radius-topright:        $topright;
	-moz-border-radius-bottomright:     $bottomright;
	-moz-border-radius-bottomleft:      $bottomleft;
	-moz-border-radius-topleft:         $topleft;
	border-top-right-radius:            $topright;
	border-bottom-right-radius:         $bottomright;
	border-bottom-left-radius:          $bottomleft;
	border-top-left-radius:             $topleft;
	-moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}
@mixin opacity($opacity: 0.5) {
  @include prefixed(opacity, $opacity);
}
@mixin position_center($device_name){
  [#{$device_name}~="position:center"]{
    @include prefixed(display, flex);
    @include prefixed(justify-content, center);
    margin: auto;
  }
}
@mixin position_ewcenter($device_name){
  [#{$device_name}~="position:ewcenter"]{
    @include prefixed(display, flex);
    @include prefixed(justify-content, center);
    @include prefixed(align-items, center);
    margin: auto;
  } 
}
@mixin position_right($device_name){
  [#{$device_name}~="position:right"]{
    @include prefixed(display, flex);
    @include prefixed(justify-content, flex-end);
    margin-left: auto;
  }
}
@mixin position_left($device_name){
  [#{$device_name}~="position:left"]{
    @include prefixed(display, flex);
    @include prefixed(justify-content, flex-start);
    margin-right: auto;
  }
}

