/* general operations */
[general~="position:center"]{
  @extend [flex];
  @extend [flex~="jc-c"];
  margin: auto;
}
[general~="position:ewcenter"]{
  @extend [flex];
  @extend [flex~="jc-c"];
  @extend [flex~="ai-c"];
  margin: auto;
}
[general~="position:right"]{
  @extend [flex];
  @extend [flex~="jc-fe"];
  margin-left: auto;
}
[general~="position:left"]{
  @extend [flex];
  @extend [flex~="jc-fs"];
  margin-right: auto;
}
/* text */
[general~="text:unselectable"]{@include prefixed(user-select, none)}
@each $name, $px in $size{
  @include general("text:#{$name}", font-size, $px);
}
/* border */
@for $i from 1 to 21{
  @include general-prefixed("border:#{$i}", border ,$i+0px solid);
}
/* border-radius ayarı */
@for $i from 1 to 21{
  @include general-prefixed("br:#{$i}", border-radius ,$i*2px);
}
@include general-prefixed("br:circle", border-radius, 50%);

//  opacity
@include general-prefixed("opacity:0", opacity, 0);
@for $i from 1 to 11{
  @include general-prefixed("opacity:0.#{$i}", opacity ,$i/10);
}
// for width
@for $i from 1 to 101{
  @include general("width:#{$i}", width, 0% + $i);
}
[general~="width:f"]{
  @include reverse-prefixed(width, fit-content);
}
[general~="width:a"]{
  @include reverse-prefixed(width, available);
}
[general~="width:max"]{
  @include reverse-prefixed(width, max-content);
}
[general~="width:min"]{
  @include reverse-prefixed(width, min-content);
}
/* genişlik ayarları */
/* colors */
@each $name, $hex in $colors{
  @include general("color:#{$name}", color, $hex);
  @include general("bgc:#{$name}", background-color, $hex);
  @include general("brc:#{$name}", border-color, $hex);
}
//
@include general("font:quicksand", font-family, ('Quicksand', sans-serif));
